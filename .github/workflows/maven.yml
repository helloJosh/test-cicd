name: Java CI with Maven, SonarQube, and Docker

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
      - name: Check out the code
        uses: actions/checkout@v4

      - name: Set up JDK 21
        uses: actions/setup-java@v3
        with:
          java-version: '21'
          distribution: 'temurin'
          cache: maven

      - name: Build with Maven
        run: mvn -B package --file pom.xml
#
#      - name: Run SonarQube
#        run: mvn clean verify sonar:sonar -Dsonar.projectKey=${{secrets.SONAR_KEY}} -Dsonar.projectName=${{secrets.SONAR_HOST}} -Dsonar.host.url=${{secrets.SONAR_HOST}} -Dsonar.token=${{secrets.SONAR_TOKEN}}

      - name: Log in to Docker Hub
        run : login -u kimjoshua135@gmail.com -p 1!Rlaquddn!
        #run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

      - name: Build Docker image
        run: sudo docker build -t ${{ secrets.DOCKER_USERNAME }}/hello-spring:latest .

      - name: Push Docker image to Docker Hub
        run: sudo docker push ${{ secrets.DOCKER_USERNAME }}/hello-spring:latest

      - name: Deploy to server via SSH
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SSH_IP }}
          username: ${{ secrets.SSH_ID }}
          key: ${{ secrets.SSH_KEY }}
          port: ${{ secrets.SSH_PORT }}
          script: |
            docker pull ${{ secrets.DOCKER_USERNAME }}/hello-spring:latest
            docker stop hello-spring || true
            docker rm hello-spring || true
            docker run -d --name hello-spring -p 8080:8080 -p 6379:6379 -p 1433:1433 -p 80:80 ${{ secrets.DOCKER_USERNAME }}/hello-spring:latest